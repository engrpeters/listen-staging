{"version":3,"sources":["meteor://ðŸ’»app/packages/tunguska:reactive-aggregate/aggregate.js"],"names":["module","export","ReactiveAggregate","sub","collection","pipeline","options","Meteor","link","v","Mongo","Promise","TunguskaReactiveAggregateError","makeErrorType","msg","message","path","sanitizedError","Error","ready","stop","Collection","Array","Object","localOptions","noAutomaticObserver","aggregationOptions","observeSelector","observeOptions","observers","debounceCount","debounceDelay","clientCollection","_name","forEach","cursor","i","_cursorDescription","collectionName","parseInt","keys","length","console","log","initializing","_ids","_iteration","update","docs","await","rawCollection","aggregate","toArray","doc","_id","ObjectID","toHexString","toString","added","changed","id","removed","err","currentDebounceCount","timer","debounce","setTimeout","clearTimeout","find","push","handles","observeChanges","error","onStop","handle"],"mappings":"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","file":"/packages/tunguska_reactive-aggregate.js","sourcesContent":["export const ReactiveAggregate = (sub, collection = null, pipeline = [], options = {}) => {\n  import { Meteor } from 'meteor/meteor';\n  import { Mongo } from 'meteor/mongo';\n  import { Promise } from 'meteor/promise';\n\n  // Define new Meteor Error type\n  const TunguskaReactiveAggregateError = Meteor.makeErrorType('tunguska:reactive-aggregate', function(msg) {\n    this.message = msg;\n    this.path = '';\n    this.sanitizedError = new Meteor.Error('Error', 'tunguska:reactive-aggregate');\n  });\n\n  // Check inbound parameter types\n  if (!(sub && sub.ready && sub.stop)) {\n    throw new TunguskaReactiveAggregateError('unexpected context - did you set \"sub\" to \"this\"?');\n  }\n  if (!(collection instanceof Mongo.Collection)) {\n    throw new TunguskaReactiveAggregateError('\"collection\" must be a Mongo.Collection');\n  }\n  if (!(pipeline instanceof Array)) {\n    throw new TunguskaReactiveAggregateError('\"pipeline\" must be an array');\n  }\n  if (!(options instanceof Object)) {\n    throw new TunguskaReactiveAggregateError('\"options\" must be an object');\n  }\n\n  // Set up local options based on defaults and supplied options\n  const localOptions = {\n    ...{\n      noAutomaticObserver: false,\n      aggregationOptions: {},\n      observeSelector: {},\n      observeOptions: {},\n      observers: [], // cursor1, ... cursorn\n      debounceCount: 0,\n      debounceDelay: 0, // mS\n      clientCollection: collection._name,\n    },\n    ...options\n  };\n\n  // Check options\n  if (typeof localOptions.noAutomaticObserver !== 'boolean') {\n    throw new TunguskaReactiveAggregateError('\"options.noAutomaticObserver\" must be true or false');\n  }\n  if (typeof localOptions.observeSelector !== 'object') {\n    throw new TunguskaReactiveAggregateError('deprecated \"options.observeSelector\" must be an object');\n  }\n  if (typeof localOptions.observeOptions !== 'object') {\n    throw new TunguskaReactiveAggregateError('deprecated \"options.observeOptions\" must be an object');\n  }\n  if (!(localOptions.observers instanceof Array)) {\n    throw new TunguskaReactiveAggregateError('\"options.observers\" must be an array of cursors');\n  } else {\n    localOptions.observers.forEach((cursor, i) => {\n      // The obvious \"cursor instanceof Mongo.Cursor\" doesn't seem to work, so...\n      if (!(cursor._cursorDescription && cursor._cursorDescription.collectionName)) {\n        throw new TunguskaReactiveAggregateError(`\"options.observers[${i}]\" must be a cursor`);\n      }\n    });\n  }\n  if (!(typeof localOptions.debounceCount === 'number')) {\n    throw new TunguskaReactiveAggregateError('\"options.debounceCount\" must be a positive integer');\n  } else {\n    localOptions.debounceCount = parseInt(localOptions.debounceCount, 10);\n    if (localOptions.debounceCount < 0) {\n      throw new TunguskaReactiveAggregateError('\"options.debounceCount\" must be a positive integer');\n    }\n  }\n  if (!(typeof localOptions.debounceDelay === 'number')) {\n    throw new TunguskaReactiveAggregateError('\"options.debounceDelay\" must be a positive integer');\n  } else {\n    localOptions.debounceDelay = parseInt(localOptions.debounceDelay, 10);\n    if (localOptions.debounceDelay < 0) {\n      throw new TunguskaReactiveAggregateError('\"options.debounceDelay\" must be a positive integer');\n    }\n  }\n  if (typeof localOptions.clientCollection !== 'string') {\n    throw new TunguskaReactiveAggregateError('\"options.clientCollection\" must be a string');\n  }\n\n\n  // Warn about deprecated parameters if used\n  if (Object.keys(localOptions.observeSelector).length !== 0) console.log('tunguska:reactive-aggregate: observeSelector is deprecated');\n  if (Object.keys(localOptions.observeOptions).length !== 0) console.log('tunguska:reactive-aggregate: observeOptions is deprecated');\n\n  // observeChanges() will immediately fire an \"added\" event for each document in the cursor\n  // these are skipped using the initializing flag\n  let initializing = true;\n  sub._ids = {};\n  sub._iteration = 1;\n\n  const update = () => {\n    if (initializing) return;\n    // add and update documents on the client\n    try {\n      const docs = Promise.await(collection.rawCollection().aggregate(pipeline, localOptions.aggregationOptions).toArray());\n      docs.forEach(doc => {\n\n        /*  _ids are complicated:\n            For tracking here, they must be String\n            For minimongo, they must exist and be\n              String or ObjectId\n              (however, we'll arbitrarily exclude ObjectId)\n            _ids coming from an aggregation pipeline may be anything or nothing!\n          ObjectIds coming via toArray() become POJOs\n        */\n\n        if (!doc._id) { // missing or otherwise falsy\n          throw new TunguskaReactiveAggregateError('every aggregation document must have an _id');\n        } else if (doc._id instanceof Mongo.ObjectID) {\n          doc._id = doc._id.toHexString();\n        } else if (typeof doc._id === 'object') {\n          doc._id = doc._id.toString();\n        } else if (typeof doc._id !== 'string') {\n          throw new TunguskaReactiveAggregateError('aggregation document _id is not an allowed type');\n        }\n\n        if (!sub._ids[doc._id]) {\n          sub.added(localOptions.clientCollection, doc._id, doc);\n        } else {\n          sub.changed(localOptions.clientCollection, doc._id, doc);\n        }\n        sub._ids[doc._id] = sub._iteration;\n      });\n\n      // remove documents not in the result anymore\n      Object.keys(sub._ids).forEach(id => {\n        if (sub._ids[id] !== sub._iteration) {\n          delete sub._ids[id];\n          sub.removed(localOptions.clientCollection, id);\n        }\n      });\n      sub._iteration++;\n    } catch (err) {\n      throw new TunguskaReactiveAggregateError (err.message);\n    }\n  }\n\n  let currentDebounceCount = 0;\n  let timer;\n\n  const debounce = () => {\n    if (initializing) return;\n    if (!timer && localOptions.debounceCount > 0) timer = Meteor.setTimeout(update, localOptions.debounceDelay);\n    if (++currentDebounceCount > localOptions.debounceCount) {\n      currentDebounceCount = 0;\n      Meteor.clearTimeout(timer);\n      update();\n    }\n  }\n\n  if (!localOptions.noAutomaticObserver) {\n    const cursor = collection.find(localOptions.observeSelector, localOptions.observeOptions);\n    localOptions.observers.push(cursor);\n  }\n\n  const handles = [];\n  // track any changes on the observed cursors\n  localOptions.observers.forEach(cursor => {\n    handles.push(cursor.observeChanges({\n      added: debounce,\n      changed: debounce,\n      removed: debounce,\n      error(err) {\n        throw new TunguskaReactiveAggregateError (err.message);\n      }\n    }));\n  });\n\n  // stop observing the cursors when the client unsubscribes\n  sub.onStop(() => {\n    handles.forEach(handle => {\n      handle.stop();\n    });\n  });\n  // End of the setup phase. We don't need to do any of that again!\n\n  // Clear the initializing flag. From here, we're on autopilot\n  initializing = false;\n  // send an initial result set to the client\n  update();\n  // mark the subscription as ready\n  sub.ready();\n\n};\n"]}